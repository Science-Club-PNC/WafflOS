#include <stddef.h>
#include <stdbool.h>

#include "terminal.h"
#include "vga.h"

static size_t terminal_width = VGA_WIDTH;
static size_t terminal_height = VGA_HEIGHT;

static size_t view_column = 0;
static size_t view_line = 0;

static bool line_wrapping = false;

char debug_string[25] = { 0 }; 

void update_view()
{
    size_t read_column;
    size_t read_line;

    vga_set_char(0, '%');

    if (line_wrapping) {
        
    } else {
        read_column = view_column;
        read_line = view_line;
    }
    
    struct line_descriptor* line_desc = get_line(read_line);
    
    for (size_t render_line = 0; render_line < terminal_height; render_line++) {
        for (size_t render_column = 0; render_column < terminal_width; render_column++) {
            if (line_desc && read_column < line_desc->saving_length) {
                debug_string[12] = '{';
                debug_string[13] = line_desc->string[0];
                debug_string[14] = line_desc->string[1];
                debug_string[15] = line_desc->string[2];
                debug_string[16] = '}';
                
                vga_set_char(terminal_width*render_line + render_column, line_desc->string[read_column]);
                read_column++;
            } else {
                vga_set_char(terminal_width*render_line + render_column, '.');
            }
        }
        
        if (line_wrapping) {
            // TODO: add line wrapping newline
        } else {
            read_line++;
            read_column = 0;  // TODO: add view column stuff
            line_desc = get_line(read_line);
            debug_string[10] = 'r';
        }
        
    }

    for (int i = 0; i < 25; i++) {
        vga_set_char(terminal_width*(terminal_height - 1) + i, debug_string[i]);
    }
}

void set_view_location(size_t column, size_t line)
{
    view_column = column;
    view_line = line;
    update_view();
}

